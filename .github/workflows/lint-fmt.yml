name: "Terraform Lint"
on:
  pull_request:
    paths:
      - "**.tf"

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-lint:
    name: "Terraform Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Terraform Setup"
        uses: hashicorp/setup-terraform@v3

      - name: Setup tflint
        uses: terraform-linters/setup-tflint@v3

      - name: Terraform lint
        id: tflint
        run: tflint
        continue-on-error: true

      - name: "Terraform Init"
        id: init
        run: terraform init -backend=false -no-color
        continue-on-error: true

      - name: "Terraform Format"
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: "Terraform Validate"
        id: validate
        shell: bash
        run: terraform validate -no-color
        continue-on-error: true

      - name: Run terraform-docs
        id: docs
        uses: terraform-docs/gh-actions@v1
        with:
          working-dir: .
          output-file: ./README.md
          output-method: inject
          output-format: markdown

      - name: Hide previous comments from github-actions
        if: |
          always() &&
          github.event_name == 'pull_request'
        uses: int128/hide-comment-action@v1

      - name: "Comment PR"
        uses: actions/github-script@v7
        if: steps.init.outcome == 'failure' || steps.fmt.outcome == 'failure' || steps.validate.outcome == 'failure' || steps.tflint.outcome == 'failure' || steps.docs.outcome == 'failure'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Fmt ⚙️\`${{ steps.fmt.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Lint ⚙️\`${{ steps.tflint.outcome }}\`
            #### Terraform Docs ⚙️\`${{ steps.docs.outcome }}\`
            `
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: "Block PR if error"
        if: steps.init.outcome == 'failure' || steps.fmt.outcome == 'failure' || steps.validate.outcome == 'failure' || steps.tflint.outcome == 'failure' || steps.docs.outcome == 'failure'
        run: exit 1
